@model SocialClub.Models.AspNetUser
@{
    ViewBag.Title = "Register User";
    Layout = "~/Views/Shared/_Admin_Layout.cshtml";
}


<script src="~/Scripts/jquery-1.8.0.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


    @using (Html.BeginForm("RegisterUser", "Administration", FormMethod.Post))
    {
        <section id="contact" class="section-bg wow fadeInUp">
            <div class="container">

                <div class="section-header">
                    <h3 class="h3center">Register New User</h3>
                    <div class="separator-breadcrumb border-top"></div>
                    @if (TempData["response"] != null)
                    {
                        <div class="alert alert-success" id="msgalert">
                            @TempData["response"].ToString()
                        </div>
                    }
                </div>

                <div class="row contact-info">

                    <div class="form col-md-12">
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control form-control-rounded", placeholder = "First Name*" } })
                                @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger db" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control form-control-rounded", placeholder = "Last Name*" } })
                                @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger db" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control form-control-rounded", placeholder = "Email*" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger db" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.EditorFor(model => model.mobile, new { htmlAttributes = new { @class = "form-control form-control-rounded", placeholder = "Mobile*" } })
                                @Html.ValidationMessageFor(model => model.mobile, "", new { @class = "text-danger db" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                @Html.PasswordFor(model => model.PasswordHash, new { @class = "form-control form-control-rounded", placeholder = "Password*" })
                                @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger db" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.PasswordFor(model => model.ConfirmPasswordHash, new { @class = "form-control form-control-rounded", placeholder = "Confirm Password*" })
                                @Html.ValidationMessageFor(model => model.ConfirmPasswordHash, "", new { @class = "text-danger db" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                @Html.DropDownList("state", new List<SelectListItem>{new SelectListItem{ Text="Balochistan", Value="Balochistan"},new SelectListItem{ Text="Punjab", Value="Punjab"}
                                ,new SelectListItem{ Text="Sindh", Value="Sindh"},new SelectListItem{ Text="Khyber Pakhtunkhwa", Value="Khyber Pakhtunkhwa" },new SelectListItem{ Text="Gilgit−Baltistan", Value="Gilgit−Baltistan"},new SelectListItem{ Text="Azad Jammu and Kashmir", Value="Azad Jammu and Kashmir"}
                                }, "--- Select State---", new { @class = "form-control form-control form-control-rounded" })
                                @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger db" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control form-control form-control-rounded", placeholder = "City*" } })
                                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger db" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control form-control form-control-rounded", placeholder = "Address*" } })
                                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger db" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.EditorFor(model => model.cnic, new { htmlAttributes = new { @class = "form-control form-control form-control-rounded", placeholder = "Cnic*", type = "number" } })
                                @Html.ValidationMessageFor(model => model.cnic, "", new { @class = "text-danger db" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                @Html.DropDownList("role_id", (IEnumerable<SelectListItem>)ViewBag.role_id, "--- Select User Role ---", new { @class = "form-control form-control form-control-rounded" })
                                @Html.ValidationMessageFor(model => model.role_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="text-center"><button class="btn btn-danger" name="btnRegister" type="submit">Register User</button></div>

                    </div>
            </div>
        </section>
    }

